# Nome do seu Workflow. Aparecerá na aba "Actions" do seu repositório.
name: Rodar Script Python Diariamente

# Define o gatilho (evento) que iniciará o workflow.
on:
  schedule:
    # A sintaxe 'cron' define a frequência da execução.
    # Roda a cada 5 minutos.
    - cron: '* */1 * * *'
  
  # A linha abaixo permite que você rode o workflow manualmente pela aba Actions.
  # É muito útil para testar!
  workflow_dispatch:

# Define os trabalhos (jobs) a serem executados.
jobs:
  # Nome do seu job. Pode ser qualquer nome.
  build:
    # Define o tipo de servidor (runner) que será usado. 'ubuntu-latest' é o mais comum.
    runs-on: ubuntu-latest

    # Define os passos (steps) que o job executará em sequência.
    steps:
      # Passo 1: Clona o seu repositório para dentro do runner.
      - name: Checkout do repositório
        uses: actions/checkout@v4

      # Passo 2: Configura o ambiente Python na versão desejada.
      - name: Configurar Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      # Passo 3: Instala as dependências do seu projeto.
      - name: Instalar dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Passo 4: Executa o seu script Python.
      - name: Rodar o script
        run: python meu_script.py # Garanta que o nome do seu script está correto aqui
        env:
          # Mapeia os Secrets do GitHub para variáveis de ambiente
          # que o seu script Python poderá ler.
          REMETENTE: ${{ secrets.EMAIL_REMETENTE }}
          SENHA_APP: ${{ secrets.SENHA_REMETENTE }}
          DESTINATARIOS: ${{ secrets.LISTA_DESTINATARIOS }}
